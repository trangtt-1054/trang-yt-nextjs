{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/tranthutrang/Desktop/trang-yt-nextjs/src/pages/list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nexport default function List() {\n  _s();\n\n  var _useState = useState([]),\n      quotes = _useState[0],\n      setQuotes = _useState[1];\n\n  useEffect(function () {\n    function loadData() {\n      return _loadData.apply(this, arguments);\n    }\n\n    function _loadData() {\n      _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, quoteList;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://www.tronalddump.io/random/quote');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                quoteList = _context.sent;\n                setQuotes(quoteList);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadData.apply(this, arguments);\n    }\n\n    loadData();\n  }, []);\n  console.log(quotes);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, \"TEST API\");\n}\n\n_s(List, \"SUU9YDCVpUtZ6H24bwM60eqca2E=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/tranthutrang/Desktop/trang-yt-nextjs/src/pages/list.js"],"names":["Link","useEffect","useState","List","quotes","setQuotes","loadData","fetch","response","json","quoteList","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACDD,QAAQ,CAAC,EAAD,CADP;AAAA,MACtBE,MADsB;AAAA,MACdC,SADc;;AAE7BJ,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCK,QADD;AAAA;AAAA;;AAAA;AAAA,2EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBC,KAAK,CAAC,wCAAD,CAD9B;;AAAA;AACQC,gBAAAA,QADR;AAAA;AAAA,uBAE0BA,QAAQ,CAACC,IAAT,EAF1B;;AAAA;AAEQC,gBAAAA,SAFR;AAGEL,gBAAAA,SAAS,CAACK,SAAD,CAAT;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAMdJ,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT;AASAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;GAbuBD,I;;KAAAA,I","sourcesContent":["import Link from 'next/link';\nimport { useEffect, useState } from 'react';\n\nexport default function List() {\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      const response = await fetch('http://www.tronalddump.io/random/quote');\n      const quoteList = await response.json();\n      setQuotes(quoteList);\n    }\n    loadData();\n  }, []);\n\n  console.log(quotes);\n  return <div>TEST API</div>;\n}\n"]},"metadata":{},"sourceType":"module"}