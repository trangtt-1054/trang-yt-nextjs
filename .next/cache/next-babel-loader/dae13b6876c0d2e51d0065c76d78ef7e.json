{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/tranthutrang/Desktop/trang-yt-nextjs/src/pages/[date]/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nexport default function User(_ref) {\n  _s();\n\n  var resList = _ref.resList;\n  var router = useRouter();\n  return __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  }, JSON.stringify(resList, null, 4));\n}\n\n_s(User, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = User;\n\nUser.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var query, response, resList;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = ctx.query;\n            _context.next = 3;\n            return fetch(\"https://api.spacexdata.com/v3/history/\".concat(query.id));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            resList = _context.sent;\n            return _context.abrupt(\"return\", {\n              resList: resList\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/tranthutrang/Desktop/trang-yt-nextjs/src/pages/[date]/[id].js"],"names":["useRouter","User","resList","router","JSON","stringify","getInitialProps","ctx","query","fetch","id","response","json"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,IAAT,OAA2B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACxC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,IAAI,CAACC,SAAL,CAAeH,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAN,CAAP;AACD;;GAHuBD,I;UACPD,S;;;KADOC,I;;AAKxBA,IAAI,CAACK,eAAL;AAAA,uEAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,KADa,GACHD,GADG,CACbC,KADa;AAAA;AAAA,mBAEEC,KAAK,iDACeD,KAAK,CAACE,EADrB,EAFP;;AAAA;AAEfC,YAAAA,QAFe;AAAA;AAAA,mBAKCA,QAAQ,CAACC,IAAT,EALD;;AAAA;AAKfV,YAAAA,OALe;AAAA,6CAMd;AAAEA,cAAAA,OAAO,EAAPA;AAAF,aANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { useRouter } from 'next/router';\n\nexport default function User({ resList }) {\n  const router = useRouter();\n  return <pre>{JSON.stringify(resList, null, 4)}</pre>;\n}\n\nUser.getInitialProps = async (ctx) => {\n  const { query } = ctx;\n  const response = await fetch(\n    `https://api.spacexdata.com/v3/history/${query.id}`\n  );\n  const resList = await response.json();\n  return { resList };\n};\n"]},"metadata":{},"sourceType":"module"}